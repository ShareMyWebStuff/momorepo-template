name: "OIDC::DB::Deployment"

on:
    workflow_dispatch:
        inputs:
            environment:
                description: "Environment"
                required: true
                default: "dev"

jobs:
    deploy:
      name: Load the baseline
      runs-on: ubuntu-latest
      # These permissions are needed to interact with GitHub's OIDC Token endpoint.
      permissions:
        id-token: write
        contents: read

      steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v2-beta
        with:
          node-version: '18'

      - name: Install packages
        run: |
          yarn install

      - name: Install dependencies
        run: npm install -g aws-cdk

      - name: Configure AWS credentials from Test account
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::216211142709:role/AWSOpenIdRole
          aws-region: us-west-2
      - name: Run build
        run: |
          cd apps/infrastructure
          yarn build

      # 
      - name: Copy files to the test website with the AWS CLI
        run: |
          cd apps/database
          aws s3 cp . s3://cameronguy-biz-deployment --recursive

      # Deploys items to run that manage the database deployment
      # Such as the lambda that runs the database deployment
      - name: Deploy Items for Running Deployment
        run: |
            cd apps/infrastructure
            cdk deploy -c env=dev --require-approval never

      - name: s3 list 
        run: aws s3 ls

      - name: Print assumed role
        run: aws sts get-caller-identity

      - name: Run Lambda to deploy database changes
        run: |
          cd apps/database
          echo "aws lambda invoke -- function-name cameronguy-biz-dev-deploy-database-changeset -- cli-binary-format raw-in-base64-out -- payload e30= response.json"
          aws lambda invoke -- function-name cameronguy-biz-dev-deploy-database-changeset -- cli-binary-format raw-in-base64-out -- payload e30= /tmp/response.json
          cat /tmp/response.json





      # - name: Run Lambda to deploy database changes
      #   run: |
      #     cd apps/database
      #     aws lambda invoke --function-name "cameronguy-biz-dev-deploy-database-changeset" --cli-binary-format raw-in-base64-out --payload "{}" response.json
      #     echo "aws lambda invoke -- function-name cameronguy-biz-dev-deploy-database-changeset -- cli-binary-format raw-in-base64-out -- payload e30= response.json"

      # - name: Invoke foobarFunction Lambda
      #   uses: gagoar/invoke-aws-lambda@master
      #   with:
      #     FunctionName: cameronguy-biz-dev-deploy-database-changeset
      #     Payload: '{ "myParameter": false }'

      # - name: Run Lambda to deploy database changes
      #   run: |
      #     cd apps/database
      #     echo "aws lambda invoke -- function-name cameronguy-biz-dev-deploy-database-changeset -- cli-binary-format raw-in-base64-out -- payload e30= response.json"
      #     aws lambda invoke -- function-name cameronguy-biz-dev-deploy-database-changeset -- cli-binary-format raw-in-base64-out -- payload e30= response.json

      # - name: Run deployment lambda
      #   run: |
      #     cd apps/database
      #     aws s3 sync . s3://cameronguy-biz-deployment
      #   - name: Configure AWS credentials from Production account
    #     uses: aws-actions/configure-aws-credentials@v2
    #     with:
    #       role-to-assume: arn:aws:iam::222222222222:role/my-github-actions-role-prod
    #       aws-region: us-west-2
    #   - name: Copy files to the production website with the AWS CLI
    #     run: |
    #       aws s3 sync . s3://my-s3-prod-website-bucket